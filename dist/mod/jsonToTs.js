import{jsonCleaner as t}from"./jsonCleaner";import{_jsonToTs as e}from"./_jsonToTs";import{defaultOptions as r}from"./_jsonToTsOptions";async function o(o,i={}){if(i={...r,...i},!(o=t("string"==typeof o?o.trim():String(o).trim())))throw new Error("Target is empty");const n=JSON.parse(o);if("string"==typeof n||"number"==typeof n||"boolean"==typeof n||"symbol"==typeof n||"bigint"==typeof n||void 0===n)throw new Error("Invalid input data type");i.rootTypeName||(i.rootTypeName="IRoot");let p=[],a="export type "+i.rootTypeName+" = "+e(n,i.inlineType,p);if(p.length){p=p.filter(((t,e,r)=>r.indexOf(t)>=e));for(const t of p)a=a+"\n\n"+t+"\n"}if(!i.withPrettier)return a;const{format:s}=await import("prettier/standalone"),{default:f}=await import("prettier/plugins/estree"),{default:m}=await import("prettier/plugins/babel");return a=await s(a,{plugins:[f,m],parser:"babel-ts",printWidth:i.printWidth,semi:i.semicolon,tabWidth:i.tabWidth}),a}export{o as jsonToTs,r as defaultOptions};