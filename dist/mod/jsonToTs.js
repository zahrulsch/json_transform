var t=this&&this.__awaiter||function(t,e,i,n){return new(i||(i=Promise))((function(o,r){function p(t){try{s(n.next(t))}catch(t){r(t)}}function a(t){try{s(n.throw(t))}catch(t){r(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(p,a)}s((n=n.apply(t,e||[])).next())}))};import{jsonCleaner as e}from"./jsonCleaner";import{_jsonToTs as i}from"./_jsonToTs";import{defaultOptions as n}from"./_jsonToTsOptions";function o(o,r={}){return t(this,void 0,void 0,(function*(){if(r=Object.assign(Object.assign({},n),r),!(o=e("string"==typeof o?o.trim():String(o).trim())))throw new Error("Target is empty");const t=JSON.parse(o);if("string"==typeof t||"number"==typeof t||"boolean"==typeof t||"symbol"==typeof t||"bigint"==typeof t||void 0===t)throw new Error("Invalid input data type");r.rootTypeName||(r.rootTypeName="IRoot");let p=[],a="export type "+r.rootTypeName+" = "+i(t,r.inlineType,p);if(p.length){p=p.filter(((t,e,i)=>i.indexOf(t)>=e));for(const t of p)a=a+"\n\n"+t+"\n"}if(!r.withPrettier)return a;const{format:s}=yield import("prettier/standalone"),{default:f}=yield import("prettier/plugins/estree"),{default:l}=yield import("prettier/plugins/babel");return a=yield s(a,{plugins:[f,l],parser:"babel-ts",printWidth:r.printWidth,semi:r.semicolon,tabWidth:r.tabWidth}),a}))}export{o as jsonToTs,n as defaultOptions};